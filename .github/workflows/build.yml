name: Build
on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.os }} ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        python-version: [ 3.10.0 ]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade wheel
          pip install --upgrade -e .[dev]
          unidown --version

      - name: Build
        shell: bash
        run: |
          python setup.py clean --all
          python setup.py bdist_wheel

      - name: Code style check
        shell: bash
        run: |
          flake8 ./gitcc
          pyroma .
          mypy ./gitcc

      - name: Testing
        shell: bash
        run: |
          python setup.py check -v -m -s
          twine check dist/*

      - name: Publish to PyPI
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.10.0' && github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
